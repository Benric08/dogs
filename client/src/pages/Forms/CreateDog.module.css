@import url('https://fonts.googleapis.com/css?family=Montserrat:400,600&display=swap');

:root {
    --primary-bg-color: #F7B1AB;
    --secondary-bg-color: #807182;
    --font-color: rgba(0, 0, 0, .8);
    --font-family: 'Montserrat', sans-serif;
    --form-border-color: rgba(0, 0, 0, .1);
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

form {

    color: var(--font-color);
    display: flex;
    flex-direction: column;
    align-items: center;
    font-family: var(--font-family);
    font-size: 14px;
    font-weight: 400;
    height: 100vh;

    background: #D8AA96;
    width: 100vw;
    padding: 2vw 10vw;

    & h3 {
        color: var(--secondary-bg-color);

    }

    & input {
        border: 1px solid var(--form-border-color);
        border-radius: 12px;
        height: 38px;
        line-height: 38px;
        padding-left: 5px;
        width: 300px;

        &:focus {
            
            outline: 1px solid var(--secondary-bg-color);
            
        }
    }

    ;

    & input,
    label {
        color: var(--secondary-bg-color);
    }

    ;

    & button {
        border: 1px solid rgba(0, 0, 0, .2);
        height: 38px;
        line-height: 38px;
        width: 100px;
        border-radius: 19px;
        font-family: var(--font-family);
        background-color: var(--secondary-bg-color);
        color: var(--primary-bg-color);
        /* ------- */
        
        &:hover {
            cursor: pointer;
            background-color: var(--primary-bg-color);
            color: var(--secondary-bg-color);
            box-shadow: 0px 5px 10px 0px #80718280;
            font-weight: 700;
        }

        &[disabled] {
            cursor: not-allowed;
            background: #ccc;
        }
    }
}

.row {
    width: 80%;
    display: flex;
    gap: 10px;
    align-items: flex-start;
    margin: 10px 0;
    padding: 0 10vw;
}

.height,
.weight,
.lifeSpan,
.name,
.temperament {
    width: 300px;
    display: flex;
    flex-direction: column;

    & input {
        width: 39%;
    }

    & label {
        display: block;
        margin-bottom: 5px;
    }

    & div {
        display: flex;
        gap: 5px;
    }

}


.name {

    & input {
        width: 80%;
    }

}

.inputError {
    border: 2px solid red;

    &:focus {
        outline-color: red;


    }
}

.listErrors {
    margin-left: 16px;
    margin-top: 8px;

    & .error {
        color: red;
        font-size: 0.8rem;
        margin-bottom: 4px;
    }
}

.fileContainer {
    width: 300px;
}

.fileInput {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;

    &+label {
        max-width: 90%;
        font-size: 1.25rem;
        font-weight: 700;
        text-overflow: ellipsis;
        white-space: nowrap;
        cursor: pointer;
        display: flex;
        gap: 10px;
        align-items: center;
        overflow: hidden;
        padding: 0.625rem 0;
        color: var(--secondary-bg-color);

        & figure {
            background: var(--secondary-bg-color);
            display: flex;
            justify-content: center;
            padding: 5px;
            border-radius: 50%;

            & img {
                width: 2rem;
                height: 2rem;
                fill: currentColor;

            }
        }
    }
}

.labelInputFile {}

.messageLabel {
    font-size: 16px;
    font-weight: normal;
    font-family: 'Lato';
}

.errorMessageLabel {
    font-size: 16px;
    font-weight: normal;
    font-family: 'Lato';
    color: red;
}

.loadingSpinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #0c0909;
    display: none;
  
}

/* Estilos para el círculo de carga */
.spinner {
    border: 4px solid rgba(171, 32, 32, 0.3);
    border-top: 4px solid #0c0909;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}




/* Estilos para ocultar el botón cuando está deshabilitado */
button[disabled] + .loadingSpinner {
    display: block;
}